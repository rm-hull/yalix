; Core yalix functions

(define (identity x)
  x)

(define (comp f g)
  (λ (x) 
    (f (g x))))

(define (dec n)
  (- n 1))

(define (inc n)
  (+ n 1))

(define (range n)
  (letrec ((accum (λ (x) 
                (if (< x n)
                  (cons x (accum (inc x)))))))
    (accum 0)))

(define (map f xs)
  (if (not (nil? (first xs)))
    (cons 
      (f (first xs))
      (map f (rest xs)))))

(define (factorial x)
  (if (= x 0)
    1
    (* x (factorial (- x 1)))))
