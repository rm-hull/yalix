; Core yalix functions

(define (identity x)
  x)

(define (comp f g)
  (Î» (x)
    (f (g x))))

(define (force delayed-object)
  (if (promise? delayed-object)
    (delayed-object)
    delayed-object))

(define first car)

(define next (comp force cdr))

(define rest (comp force cdr))

(define second (comp first next))

(define third (comp second next))

(define empty? nil?)

(define (lazy-list xs)
  (if (not (empty? xs))
    (cons
      (first xs)
      (delay
        (lazy-list (rest xs))))))

(define (list . xs)
  (lazy-list xs))

